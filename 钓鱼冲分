--[[
    Name: 魔改自用
    Version: 2.0.0
    IMPORTANT NOTES: Most likely need ICE v0.0.33 if you want stability, not tested on latest ICE version
    需要插件:
    -> SomethingNeedDoing v12.38
    -> Autohook
    -> Artisan
    -> Navmesh
    -> Lifestream
    -> (Optional) ChatCoordinates
    -> (Optional) Ice's Cosmic Exploration | Run with this to auto grab missions
    Make sure you're on Latest SomethingNeedDoing Edition, version should be around v12.38 and above.
    Autohook预设:
AH4_H4sIAAAAAAAACu1Yz2/bNhT+VwaezUGUKEr0zXXTLkDSFnGGHYodKIqyhciSS1FZs8BAsUPRngZsGLZDDzts96XbMGDIsL8mRf1fDNSPWJJlx2mDosV6sym+733v8XuPP07BIFPJkKUqHQZj0D8FOzHzIjGIItBXMhM9cCA4S9UgDqdMhUk8ZDEXlx8PMxkPkygSXN0Pgmp0OMmmawy0q70wFtrV7jhOpNhPEj4B/YBFqeiV7v1q+q4P+qZLe+CBDBMZqhPQRz2wm+485lHmC385rOfPC/wS8RTkP8zclcYhbg/cnR1OpEgnSeSDPjKMBvJm6ByDOg0L40oyOhcVA4wM3KJgtShUVkVOa4aoPs282m0i/ZBFyxVtpBQZBkEYtbjgJpcm1YGXHItymUofd8J0snMi0hpLuwVp2w1IUq0QOxKjSRioWyzMg9QDaTUwUowfpaBvlzkn7ipuHZWWqA+YCkXMRY0PaduRZrrNylSGX4shU4VuKq9ta9dtWlul9eGERSE7Su+w40RqgMZAFY7Va44fCJ4cCwn6SCepS/jE1XqpOazydysc32XTPNBBPI6ETCsnWhlaVo6B2+zNBpQ7n/fAzmMlWVn4OvOHyegrNtuNVRbq0r3LwrjKB0Q9sJdJsS/SlI0F6APQA/dyEuDVjz+DXgFwMhOgr/PSAbeXpOpN4R5IkYpufgCCNd8Lh/n3JZ3RTHAlWTTMpBSxupkYW6A3FWkn15V4O53nswpxjFQy07UaxuORErO8hS6plwIayBthXEfLKXweh48yoWGB6WGfIoygazMOseP70KOmDYnlWNx3kWUyAuY9sBem6n6gfaSg/7BQpuZ/yY/SDQSfP3n14vni7Hzx658rTO8lcsqiz5LkSGNV/eILwfL/ejwV6rISG1tS+VHHWNVoOVTAY+ToPlRhjpRM4tqG2mG+zx7r0cNwWjSBT40VSMOqQe6JsYh9Jk/elGvuqdVn9sO4TsLUJPSW1TVXjzfnk3WcbyeZF12V2IahSeil3TJ517XcJketvK+EUOAdynB2zQgc27QuLa8ZQ8N2myje1YJWzHQTGQRKyCHLxhO1F071zm0WH5rdxTBxedDLZHE60D9q22DHXmc5Nm2fjfS2uPaYow9kVZ+vCvpAPMpCKfyRYirTBwh94ns3Vf6WqDdb6B9SNX6gpbdlfaCu+thcHOuqYeNdY97YaBmixPLsAFJMCMSG70EvcBnknklNyryA+DaYf1nttOV96WHtqlBGurLzXvNksNV+u11lbV0pVyt/C4lvp+UrRbuVOreV4Xumt7fqvh/X/INc81qPERYOuI8FdJGJIHYNA1LbMKEIAk4ZNxCivNZjii7y8BTU2wm2qbmpo7x4dvHP2eLlL42+gjYlYtcXsQo5i3T02k0xYTBNsrgxLXfeviFbzdcKV3vKZMC4GEV6h+18S8E2bb9OmE0cZM974L15lFre/N60q2tbPTLUSc3zWb8Blvc+/bMYXk7rkmlNUr7t2wYxHMht4UJMfAO6hBKIMWeIYeYy7IF5b0VDaNN18MWzxQ//Xvz0x+Ls5UcZ/S9kRAjmtmVxyDyGICaWBZnlYIi4HQQcceoiq0tGprme/8Vv377+6/fX3/y9ODu/SkbVqnary6p9OKjFVSnhrYV3O4lV8ebefFnfKMh1CmyJ6KMC1RoF5nfe+luXMFzT9FxoCBtDjB0CKXUEJJg5wvKxiVyUb48FdElyAM3+J4vvvl+cnV88fXnx7GnzAc0gzPEpJdC0CYUYIQpd17Yh57ZDbYxt3yVg/h9U/Jxa1BkAAA==
	Changes:
    Minnu
    - 最新版SND
    - 增加了15次制作后重新换位，避免鱼类警惕
    - 自动启动宇宙探索
    - 插件 + 超时检查
    额呵
	- 添加A-2 制作改良版月凝胶
	- 添加了自动修理
	- 每完成5次成功任务后进行一次换钓点
]]

---------------------------------- Import ---------------------------------

import("System.Numerics")

---------------------------------------------------------------------------

-- Plugin Checks

RequiredPlugins = {
    "AutoHook",
    "Artisan",
    "vnavmesh",
    "Lifestream"
}

-- Settings
WeatherSelection = "Normal" -- All, Normal, Moon, Umbral

-- Variables, editable
FisherNormalMissionName   = "A-2：制作改良版月凝胶"
FisherNormalCoords        = "/coord 15.8 19.4"
FisherNormalPreset        = "A-2: 钓鱼冲分"
FisherNormalItem          = 45922
FisherNormalAmount        = 2

local missionName         = ""
local SuccessCount        = 0
local coords              = ""
local preset              = ""
local itemId              = 0
local itemAmount          = 0
local classId             = Player.Job.Id
local weatherId           = Instances.EnvManager.ActiveWeather
local previousWeatherType = ""

-- Functions

function HasPlugin(name)
    for plugin in luanet.each(Svc.PluginInterface.InstalledPlugins) do
        if plugin.InternalName == name and IPC.IsInstalled(name) then
            return true
        end
    end
    return false
end

function Plugins()
    local missingPlugins = {}

    for _, plugin in ipairs(RequiredPlugins) do
        if not HasPlugin(plugin) then
            table.insert(missingPlugins, plugin)
        end
    end

    if #missingPlugins > 0 then
        for _, plugin in ipairs(missingPlugins) do
            yield(string.format("/echo [HybridFishing] Missing required plugin: %s", plugin))
            Dalamud.Log(string.format("[HybridFishing] Missing required plugin: %s", plugin))
        end
        yield("/echo [HybridFishing] Stopping the script due to missing plugins.")
        Dalamud.Log("[HybridFishing] Stopping the script due to missing plugins.")
        yield("/snd stop all")
    end
end

local function init()
    if classId == 18 then
        Class = Player.Gearset.Name

        local weatherData = {
            Normal = {
                missionName = FisherNormalMissionName,
                coords = FisherNormalCoords,
                preset = FisherNormalPreset,
                itemId = FisherNormalItem,
                itemAmount = FisherNormalAmount
            },
            Moon = {
                missionName = FisherMoonMissionName,
                coords = FisherMoonCoords,
                preset = FisherMoonPreset,
                itemId = FisherMoonItem,
                itemAmount = FisherMoonAmount
            },
            Umbral = {
                missionName = FisherUmbralMissionName,
                coords = FisherUmbralCoords,
                preset = FisherUmbralPreset,
                itemId = FisherUmbralItem,
                itemAmount = FisherUmbralAmount
            }
        }

        local selectedType = WeatherSelection == "All" and previousWeatherType or WeatherSelection
        local data = weatherData[selectedType]

        if data then
            missionName = data.missionName
            coords = data.coords
            preset = data.preset
            itemId = data.itemId
            itemAmount = data.itemAmount
        end
    else
        yield("/echo [HybridFishing] Wrong Class!!!")
        return false
    end
    return true
end

local function getWeatherType(weatherId)
    if weatherId == 148 then
        return "Moon"
    elseif weatherId == 49 then
        return "Umbral"
    else
        return "Normal"
    end
end

function WaitForPlayer()
    Dalamud.Log("[HybridFishing] Waiting For Player...")
    while not Player.Available or Player.IsBusy do
        yield("/wait 0.1")
    end
    yield("/wait 1")
end

function WaitForZoneChange()
    repeat
        yield("/wait 0.1")
    until Svc.Condition[45]
    yield("/wait 1")
    repeat
        yield("/wait 0.1")
    until not Svc.Condition[45]
    yield("/wait 1")
end

function WaitForVnavMesh()
    repeat
        yield("/wait 0.1")
    until not IPC.vnavmesh.PathfindInProgress() and not IPC.vnavmesh.IsRunning()
    yield("/wait 0.1")
end

function MoveToSpot()
    IPC.Lifestream.ExecuteCommand("Cosmic")
    repeat
        yield("/wait 0.1")
    until not IPC.Lifestream.IsBusy()
    yield("/wait 0.1")
    WaitForZoneChange()
    yield("/wait 0.1")
    IPC.vnavmesh.PathfindAndMoveTo(Vector3(-89.203, -3.337, -27.259), false)
    WaitForVnavMesh()
    yield("/ice start")
end

local function WaitForFishingItem(maxWaitSeconds)
    local waitElapsed = 0
    local retryCount = 0
    local maxRetries = 3

    IPC.AutoHook.SetPreset(preset)
    IPC.AutoHook.SetPluginState(true)
    yield("/wait 1")

    while not Svc.Condition[43] and retryCount < maxRetries do
        Dalamud.Log("[HybridFishing] Attempting to start fishing (retry "..retryCount..")")
        yield("/ahstart")
        yield("/wait 5")
        retryCount = retryCount + 1
    end

    if not Svc.Condition[43] then
        yield("/echo [HybridFishing] Failed to start fishing after retries.")
        Dalamud.Log("[HybridFishing] Fishing did not start after retries.")
        return false
    end

    Dalamud.Log("[HybridFishing] Waiting to obtain item ID "..itemId.." x"..itemAmount)
    while Inventory.GetItemCount(itemId) < itemAmount and waitElapsed < maxWaitSeconds do
        yield("/wait 1")
        waitElapsed = waitElapsed + 1
    end

    if Inventory.GetItemCount(itemId) < itemAmount then
        IPC.AutoHook.SetPluginState(false)
        yield("/wait 1")
        while Svc.Condition[6] do
            yield("/ac Quit")
            yield("/wait 0.1")
        end
        yield("/echo [HybridFishing] Timeout waiting for item ID "..itemId)
        Dalamud.Log("[HybridFishing] Timeout acquiring item ID "..itemId)
        return false
    end

    if Svc.Condition[43] then
        Dalamud.Log("[HybridFishing] Still in fishing mode, waiting to exit.")
        yield("/wait 1")
        while Svc.Condition[43] do
            yield("/wait 0.1")
        end
    end

    Dalamud.Log("[HybridFishing] Successfully acquired required items.")
    return true
end

local function startCrafting()
    if not Addons.GetAddon("WKSRecipeNotebook").Ready then
        if not Addons.GetAddon("WKSMissionInfomation").Ready then
            yield("/callback WKSHud true 11")
            yield("/wait 0.2")
        end

        if not Addons.GetAddon("WKSRecipeNotebook").Ready then
            yield("/callback WKSMissionInfomation true 14 1")
        end
    end

    yield("/wait 0.5")
    Dalamud.Log("[HybridFishing] Crafting..")
    IPC.Artisan.SetEnduranceStatus(true)
    yield("/wait 10")

    while IPC.Artisan.GetEnduranceStatus() == true do
        yield("/wait 0.5")
    end

    Dalamud.Log("[HybridFishing] Crafting completed successfully.")
    yield("/wait 1")
end

local function submitReport()
    Dalamud.Log("[HybridFishing] Reporting the Mission..")
    if not Addons.GetAddon("WKSMissionInfomation").Ready then
        yield("/callback WKSHud true 11")
        yield("/wait 0.2")
    end

    if Addons.GetAddon("WKSRecipeNotebook").Ready then
        yield("/callback WKSMissionInfomation true 14 1")
    end

    while Svc.Condition[5] do
        yield("/wait 0.1")
    end

    yield("/wait 1")
    Dalamud.Log("[HybridFishing] Changing Gearset to "..Class)
    yield("/gs change "..Class)
    yield("/wait 1")
    yield("/callback WKSMissionInfomation true 11 1")
    yield("/wait 1")
end

local function RepairIfNeeded(RepairCount)
    if SuccessCount == 0 or SuccessCount % RepairCount ~= 0 then
        return
    end

    yield("/wait 2")
    Dalamud.Log("[HybridFishing] Attempting to repair gear...")

    while not Addons.GetAddon("Repair").Ready do
        yield("/generalaction 修理")
        yield("/wait 0.5")
    end

    yield("/callback Repair true 0")
    yield("/wait 0.1")

    if Addons.GetAddon("SelectYesno").Ready then
        yield("/callback SelectYesno true 0")
        yield("/wait 0.1")
    end

    while Svc.Condition[39] do
        yield("/wait 1")
    end

    yield("/wait 1")
    yield("/callback Repair true -1")
    yield("/wait 2")
    Dalamud.Log("[HybridFishing] Repair complete.")
end

-- End of Functions

previousWeatherType = getWeatherType(weatherId)
if init() then
    Plugins()
    Dalamud.Log("[HybridFishing] MissionName: "..missionName)
    Dalamud.Log("[HybridFishing] MissionCoords: "..coords)
    Dalamud.Log("[HybridFishing] MissionPreset: "..preset)
else
    return
end

while true do
    if SuccessCount == 0 then
        MoveToSpot()
        IPC.vnavmesh.PathfindAndMoveTo(Vector3(-264.42,22.33,-95.694), false)
        WaitForVnavMesh()
    elseif SuccessCount == 5 then
        IPC.vnavmesh.PathfindAndMoveTo(Vector3(-260.486,22.307,-75.446), false)
        WaitForVnavMesh()
    elseif SuccessCount == 10 then
        IPC.vnavmesh.PathfindAndMoveTo(Vector3(-284.056,22.115,-71.043), false)
        WaitForVnavMesh()
    end

    local currentWeatherType = getWeatherType(Instances.EnvManager.ActiveWeather)
    local currentMissionName = ""

    if WeatherSelection == "All" then
        if (currentWeatherType ~= previousWeatherType) then
            return
        end
    end

    while (currentMissionName ~= missionName) do
        yield("/wait 0.5")
        if Addons.GetAddon("WKSMissionInfomation").Ready then
            currentMissionName = Addons.GetAddon("WKSMissionInfomation"):GetNode(1,3).Text
        end
    end

    yield("/wait 1")
    if not WaitForFishingItem(500) then
        Dalamud.Log("[HybridFishing] Fishing step failed or timed out.")
        yield("/echo [HybridFishing] Fishing failed. Proceeding to submit report only.")
        WaitForPlayer()
        submitReport()
        SuccessCount = 0
    elseif Inventory.GetItemCount(itemId) >= itemAmount then
        Dalamud.Log("[HybridFishing] Sufficient items available, starting crafting.")
        WaitForPlayer()
        startCrafting()
        submitReport()
        SuccessCount = SuccessCount + 1
        yield("/echo [HybridFishing] SuccessCount: "..SuccessCount)
        Dalamud.Log("[HybridFishing] SuccessCount: "..SuccessCount)
    end

    WaitForPlayer()
    RepairIfNeeded(15)

    if SuccessCount == 15 then
        SuccessCount = 0
    end
end
